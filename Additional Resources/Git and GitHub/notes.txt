Make a small file
Redirect standard output to a file called “text.txt”
```
$ echo "Hello! Nice to meet you!" > test.txt
echo "Hello! Nice to meet you" > test.txt

$ cat test.txt
Hello! Nice to meet you
```
---
```
$ git status
```
---
```
$ git rm myfile.txt                    # use this command to delete a file in repo (not $ rm filename...)

$ git cp myfile.txt newfile.txt        # use this command to copy a file in repo (not $ cp filename...)
```
---
```
$ git                                  # lists commonly used git commands
```



Test

Git Configuration (name and email)
git config --global --edit

git config --global user.name "Your Name"
git config --global user.email you@example.com






# print present working directory
pwd
/Users/reshamashaikh/ds/metis/metisgh
# create new directory
mkdir prework
# list files
ls
# change directory, go into prework directory
cd prework
# clone the repo
git clone https://github.com/reshama/dsp.git
ls
# change directory, go into dsp
cd dsp
ls
# see what the remotes are
git remote -v
# use editor to view and edit file
emacs 00-fork_repo.md

# check if any changes have been made to local repo; changed files will be in red
git status
# add a file, also means 'staging file'
git add 00-fork_repo.md
# check that file is staged, staged file will be in green
git status
# commit a file; adding message to commit to track changes made
git commit -m 'added emoji'
# check that file has been committed
git status
# push file to forked repo
git push

# clear screen
clear
ls

# open up file and see if any changes have been made to file
emacs 00-fork_repo.md

# check remotes
git remote -v
# pull updates from forked repo on broswer
git pull
ls
# check file and see that the updated changes from browser file are now in local file
emacs 00-fork_repo.md

# clear screen
clear
# print history of commands used
history